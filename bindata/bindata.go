// Code generated by go-bindata.
// sources:
// frontend/static/script.js
// frontend/static/script.min.js
// frontend/static/style.min.css
// frontend/templates/base.html
// frontend/templates/index-public.html
// frontend/templates/page-status.html
// frontend/templates/signup.html
// DO NOT EDIT!

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _frontendStaticScriptJs = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func frontendStaticScriptJsBytes() ([]byte, error) {
	return bindataRead(
		_frontendStaticScriptJs,
		"frontend/static/script.js",
	)
}

func frontendStaticScriptJs() (*asset, error) {
	bytes, err := frontendStaticScriptJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "frontend/static/script.js", size: 0, mode: os.FileMode(420), modTime: time.Unix(1456645829, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _frontendStaticScriptMinJs = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func frontendStaticScriptMinJsBytes() ([]byte, error) {
	return bindataRead(
		_frontendStaticScriptMinJs,
		"frontend/static/script.min.js",
	)
}

func frontendStaticScriptMinJs() (*asset, error) {
	bytes, err := frontendStaticScriptMinJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "frontend/static/script.min.js", size: 0, mode: os.FileMode(420), modTime: time.Unix(1456645829, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _frontendStaticStyleMinCss = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x3b\x4b\x73\xe3\xb8\xd1\x77\xff\x0a\xee\xba\xa6\x76\xec\x22\x35\xd4\xcb\x0f\xaa\x66\xea\xfb\x92\xdd\x24\x5b\x95\x3d\x65\x0f\xa9\x9a\xf1\x01\x22\x41\x89\x31\x5f\x45\x40\xb6\x3c\x8c\xfe\x7b\x1a\x2f\x0a\x2f\x4a\x72\x0e\xa9\x1c\xb2\xaa\x59\x4b\xe8\x46\xa3\xd1\x2f\x74\x83\xcd\x09\x2a\x8b\x4d\x1d\x95\x38\xa7\x3d\xc5\x7b\x1a\xf1\xdf\x09\xfb\x7d\x90\xb0\xae\xd8\x6c\x0d\x20\x1f\x50\xd0\x14\xd7\x14\x77\x3a\x58\x8c\x1c\xae\xd6\x4d\xf6\xd6\xe7\x4d\x4d\xa3\x1c\x55\x45\xf9\x96\xfc\xb2\x6f\xbe\x05\xb3\x90\xa0\x9a\x44\x04\x77\x45\x7e\xb8\x9a\xa4\x00\x47\x45\x0d\x14\x2a\xd4\x6d\x0a\xb9\x5a\x82\x76\xb4\x59\xc9\x11\xc6\x0b\x1f\x38\xfc\x5f\x85\xb3\x02\x05\x1f\x2b\x18\x7d\x2d\x32\xba\x4d\x96\x77\x0f\xed\xfe\xa6\xd7\xc8\xc8\xf1\x65\xdc\xee\x0f\x9e\x09\x8f\x8f\x33\xef\x84\xc7\xfb\x91\x09\xd3\x59\x1c\x7b\x67\x4c\xa7\x62\xca\xd5\x64\x3b\x8d\x32\x4c\xd2\xbe\x69\x51\x5a\xd0\xb7\x64\xb2\x5c\xf1\x6d\xbf\x62\xbe\x97\x45\x1c\xab\xad\xd0\xa6\x4d\xe2\xc3\xa4\xae\xd6\x6a\xbb\xeb\x86\xd2\xa6\x82\xc1\xab\xc9\xba\x4e\xb7\x51\x8d\x5e\xfa\x35\x4a\x9f\x37\x5d\xb3\xab\xb3\xe4\x7a\x86\xd8\x67\x95\x36\x65\xd3\x25\xd7\xf9\x94\x7d\x56\x6d\x43\x0a\x5a\x34\x75\x92\x17\x7b\x9c\xad\x38\x55\xb1\x24\x29\xbe\xe3\x64\xfa\xd8\xee\x57\x59\x41\xda\x12\xbd\x25\x45\x5d\x02\xd3\xd1\xba\x6c\xd2\xe7\xd5\x0b\xee\x68\x91\xa2\x52\x6a\xaa\x2a\xb2\xac\xc4\x87\x49\x8b\x36\x38\x62\xfb\x03\xcd\xf5\x1a\xab\x6c\x83\x86\x16\xa6\xcb\xe3\x80\x50\x14\x1b\x01\xde\x39\x05\x42\x11\xdd\x11\x29\x1e\xae\xc1\x16\x65\x59\x51\x6f\x92\x29\x23\xb4\x6e\xba\x0c\x77\x51\x87\xb2\x62\x47\x92\x39\xcc\xd3\xa7\x45\x60\x25\x45\xb9\xeb\xb0\xb1\xfd\x1c\x63\x39\x2f\x99\xb6\xfb\x80\x34\x65\x91\x05\xd7\xf9\x7a\xad\x24\x82\x16\x0b\x8b\x0c\xd9\xa5\x29\x26\xc4\x20\x83\x73\x1f\x99\x75\x3e\x90\x59\xa0\xc5\xe1\xea\xd3\xed\x0f\x41\xdd\x74\x15\x08\xe7\x3b\x9e\xa4\x84\x04\x2f\xf3\x49\x3c\x99\x07\xff\x0c\x7e\xfb\xf5\xf7\xe0\xaf\x05\x58\x36\xc1\xf0\x6b\x53\xd0\xed\x6e\x0d\x16\x51\x7d\xaa\x31\x50\x40\xe4\x93\x39\xef\xf6\xd3\x96\x56\xa5\x61\xfc\x47\xab\x5f\x45\x15\x89\xb8\xbf\x30\x6d\x45\x28\xfb\xc7\x8e\x80\x20\xe3\xf8\xc3\x0a\x4c\x66\xfd\x5c\x50\x3f\xf4\xc0\x1d\x4a\x48\x1f\x0c\x06\x31\x55\x96\x38\x44\xa4\xc8\x70\x98\x61\x30\xce\x92\x84\x79\xb1\x49\x51\xcb\x8c\x83\x7d\x05\x71\x86\x79\xd3\x80\x3b\x86\x5b\x8c\x32\xf6\x87\x89\xa4\x0d\x2b\xb0\xe4\xb0\xc2\xf5\x2e\x04\x83\x0b\x09\x4e\xf9\x0c\xb2\xab\x80\xfc\x5b\xaf\x6c\x87\x1b\xcd\x01\xed\xb2\xa2\x09\x53\x54\xbf\x20\x12\xb6\x5d\xb3\xe9\x40\xbc\xe1\x0b\xac\xda\xf4\x97\x58\xd9\x1a\x11\xcc\xa0\x82\x50\x52\x37\xf4\xe3\x57\x66\x6c\x5d\x53\x92\xa7\x9b\x81\x44\xdd\xd4\x78\xb5\x15\x2e\x13\x1f\xbe\x6e\xc1\x36\x71\xfd\x14\x52\x5c\x01\x98\x62\x03\xef\x80\x34\xf5\x46\x42\x87\xb4\x03\x09\xb7\xa8\x03\x1b\x3e\xa0\x04\xc1\x8e\x5e\x40\x38\xc9\xb6\x01\x76\xfa\x66\x47\x19\x0b\x4c\x6c\xeb\x75\xf7\x95\x16\xb4\xc4\x4f\xbd\xb4\x48\xe9\x83\xcc\x32\x32\xf8\x8a\xb3\xc3\x3a\x24\xc0\x5e\xbd\xe9\x75\x3f\xbe\x8f\xe3\x43\x96\xd7\x62\x8c\xd0\xb7\x12\x27\x05\x85\x2d\xa6\x87\xed\xb4\x3f\x7a\xdf\x0c\x57\xd2\x45\x92\xc9\xdd\x3d\xae\x82\xf8\x00\x3f\x9f\x4d\xb3\xce\x63\x65\x79\x31\x50\x25\x60\x3a\xa5\x46\xe2\x01\x94\x4d\x76\xc0\xc4\xae\xd5\x46\xef\x97\x1f\x56\x5c\xca\x4a\x48\xc7\x38\xd0\x61\x10\x11\xec\x77\x54\xf4\x8c\x12\xf3\xe8\x68\xb2\xc4\x15\xa3\xdd\xcb\x4d\x47\x93\x19\x1b\x29\xaa\x8d\x94\x06\x88\x88\xbc\x6c\xb8\x96\x92\x0e\x4c\xe7\xa6\x67\x02\xcc\xcb\xe6\x35\x11\x2a\x39\x08\xbb\x52\x86\x38\x85\x1d\x2e\x58\x20\xdc\x76\x40\x61\xcf\x58\x65\x1e\x2f\xa3\x09\xc8\x76\x7f\x54\x6a\x0b\xd3\x06\x6a\x3c\xa2\xa7\x0d\xd8\xee\xf3\x3a\x03\xbb\xc2\x70\x30\x54\xad\xe1\x33\x55\x53\x37\xa0\xd2\x14\xeb\xc1\x0d\xb8\x5d\xef\x80\xf7\x3a\x2c\xea\x76\x47\xc3\xa6\xa5\xc2\xa6\x61\xab\x60\xc7\x21\xf3\x1d\xb0\x02\xd4\x0b\x01\x17\xf5\x16\x9c\x8e\x72\x0a\xc3\x8f\xc1\x89\x04\xa5\x23\x53\x2f\x05\x29\xd6\x10\x12\xe5\x0a\x82\xa4\x38\xdc\xb8\x7d\xe5\xe0\xe6\xc2\x02\x25\x06\xf3\xf3\x80\x33\xf2\x95\xbe\xb5\xf8\xb3\x18\x7e\x0a\xb5\x21\x70\x17\x4c\x8d\x11\x90\x7f\x55\xd0\xa7\x5e\xb9\x3b\x6a\x5b\x8c\x80\x7c\x8a\x13\x31\x7f\x95\xee\x3a\x02\xcc\xb7\x4d\xc1\xcf\x52\x31\xfa\x15\x5c\x00\x01\x77\xd9\x93\xbe\xec\x30\xd8\xcb\x49\x19\xce\xd1\xae\xa4\x72\x52\x92\x44\x55\xf3\x3d\xca\x9b\x14\x82\x63\x51\xc3\xf9\x25\x38\x71\xc7\x07\x03\x18\xc2\x76\x7c\xe0\xa8\xbd\x6e\x75\x22\xd0\x1d\xb4\xdd\xa4\x5b\x9c\x3e\x83\x9e\xcd\x4d\x43\x94\x6f\x9e\x74\x8b\x18\x9c\x6d\x6f\xd3\x17\x33\xea\x5d\xb5\xc6\xdd\x13\xf0\x25\xa5\xc2\x99\x8a\x48\xcb\x4e\x49\x4d\xe1\x23\xd8\xe0\xe1\x26\x76\x2f\x19\xe6\x76\xa6\x0b\x1f\x44\x9d\x6e\xbd\xc2\x67\x7a\xce\x0b\x5c\x66\x2b\xbf\x25\x7b\xc8\x1c\x19\x10\x03\x51\xca\x28\x95\x1e\x8e\xc7\x26\x64\x70\x82\x74\x88\xb9\xb1\x8f\x25\x6e\x6b\x9c\x27\x30\xa2\xde\x39\xc3\x48\x51\x82\xe9\x0e\xf6\x1c\x40\x72\x33\x48\x77\x32\x07\xcf\x0e\x26\x77\x33\xfe\xe7\x9e\xb9\x79\x89\x37\xb8\xce\x7c\x8a\x1e\xbc\xc6\xf4\x4f\xe5\x5c\x4e\x20\xa4\xcc\xe6\x54\x00\x05\x4f\x2b\x51\x4b\x70\xa2\xbe\xa8\xb3\x9e\x39\xaf\xa4\x9f\x85\x74\xdb\x1f\xd7\x83\xac\x89\x47\x93\x50\x05\x7a\x23\xbe\xff\x50\x54\x6d\xd3\x51\x04\xa1\x7c\xd2\x42\xb0\x89\x58\x7c\xaa\xd0\x5e\xe5\x64\xec\xac\xd4\xd4\xbb\x32\x0f\xac\x2b\x31\x47\x9a\x81\xf7\x88\xfa\xde\xb0\x80\xbf\x72\x0d\x7b\xf5\xba\x2d\x28\xe6\x8c\x33\xe1\xbf\x76\xa8\xf5\x67\x4d\x2b\x27\xe3\xb5\x9c\x76\x38\xcc\x77\x70\xea\x47\x59\x87\x36\xe2\x88\x33\x86\x45\x80\x91\x00\xe6\x8f\x9e\x51\xe2\x0e\x3a\x03\x5e\x3f\x3b\xe8\x72\xf0\xf8\xfb\xa0\x8d\xd5\x10\xfa\x4d\xd1\xe9\xb1\x58\x8f\xa3\x32\x12\x33\x2d\x0c\xc6\xc6\x8c\x0c\x62\xf3\x90\x50\x2d\x16\xf2\x6b\xb7\x59\xa3\x8f\x71\xc8\x3e\x93\x87\x1b\x4f\x1a\xf6\xf8\xf8\xa8\x46\xd9\x5e\x02\xed\x20\x5f\x39\xa7\xfc\x35\xbe\x63\x1f\x21\xfd\xa3\xeb\x28\x29\xe8\x19\xe6\xac\x35\x25\x10\xf1\x54\x20\x34\x84\xc2\xc5\x61\x0e\x89\x84\x21\x2f\x4a\xd0\x61\xc2\xd2\x9d\x22\x4b\x7e\xfe\xfb\xaf\x15\xe4\x98\xbf\xab\x23\x60\xf2\x5b\x91\x76\x0d\x69\x72\x3a\xd9\xb0\xd5\x80\xd5\x8f\x90\x7f\x76\xf4\x8f\x8c\x49\xc8\x1d\x3e\xff\xc4\x0e\x76\xfe\xdf\x4f\x21\xb8\x9c\x36\x3e\x45\x6a\xfc\xcf\x72\xea\xef\x2c\x3c\xc4\x37\xfa\x66\x0b\xb6\x5c\xc2\xcc\x13\x75\xd1\xb0\x84\x26\x99\x50\x17\x6b\xbc\xbc\x81\x33\xf8\x83\x31\x36\xbd\xb9\x39\xb8\x5b\xd5\x12\x21\x43\x34\x32\x5d\x32\x26\x88\x31\x11\xc2\xb7\x28\x83\x90\x50\x40\xfa\x4b\x83\x98\x7f\x98\x02\x8d\xf5\x96\x37\xe1\x11\x7e\x67\x41\x67\x4a\xf1\xd1\x31\xed\xf9\xf6\x68\xf2\xa0\x0e\xb2\xd0\x3b\x9a\x78\x58\x3c\x02\x5d\x3d\x1e\x61\xae\xda\xb5\x33\x53\x33\x3c\x57\xfe\x7c\xf4\xfd\x96\x80\x6b\x4e\x3c\xf8\x1c\xe4\xa8\x24\xf8\x46\x91\x40\x65\xbb\x45\x1f\x65\x95\xf8\x79\x01\x1a\x8f\x9e\xd9\x41\x1e\x0d\x85\xe3\x42\x04\x01\xed\xb7\xf6\x55\x86\x17\xc8\xcc\x20\xec\x40\x84\xc6\xf2\x98\x12\xba\xe1\x07\x85\x69\xee\x3c\xb0\x9a\x79\xf3\xfb\x23\x82\x41\xb2\xed\x0a\x56\x20\x98\x82\x16\x71\x08\xf4\x86\xbc\xb8\xc8\x8b\xec\xe6\xef\x60\x12\xf7\x0f\xf8\x7e\x28\x75\xf3\xfc\x70\x25\xcb\xf1\xa6\x2e\xdf\x02\x92\x76\x18\xd7\x01\xaa\x33\x28\xcf\x87\xa3\x60\xf1\x20\xaa\x73\xbe\x06\x53\x48\x20\x55\x6c\x24\x5a\x2a\x1f\xe7\xe9\x78\xa0\x36\xc5\xd1\x45\x32\xc4\x8b\x12\x36\xe5\xe9\x26\xb4\x81\x32\xcb\x61\x6c\x3d\x8d\x00\x33\x28\x50\x4e\xc1\x68\x51\xe1\x08\x0e\x1e\x54\x9e\xc3\x1a\x83\x63\xa8\xd8\x46\x27\x43\x9e\x4c\xb7\x63\x40\x99\x29\x8d\x40\x5b\x44\xc8\x2b\xe8\x7a\x0c\x2e\xb3\x96\x11\x28\xc5\xa3\x3c\xb1\x00\x3d\x0a\x3b\xb1\xd1\x5d\x37\x4a\xf2\x15\xe3\x67\x03\x56\xa2\x35\x2e\xad\x9b\x94\xc9\x1c\x0e\x21\x33\x1f\x10\x33\x78\x1e\x33\xaa\x6e\x0d\xea\xd1\xb7\x03\xd5\x15\xee\x05\xba\x1a\x1f\x45\x1b\x45\x30\x74\xee\x40\x0d\xa5\x3b\x50\x53\xeb\x0e\xd8\x56\xbb\x83\x60\xea\xdd\x01\x6b\x8a\xf7\xc0\x8e\x9a\x77\x81\xa7\x36\xac\xe9\xde\x81\x71\xe5\x3b\xb7\x66\x47\x63\x10\xa9\x18\x44\x5d\x31\x24\x2f\x18\x24\x9d\x51\x43\xb1\xae\x3c\x4d\xc3\x59\x1d\xb3\xcd\xb3\x0b\x91\xa1\x1e\xe6\x99\x90\x19\x64\xa2\x0a\x13\x02\xa7\x46\xe8\x0e\x45\x22\x2d\xd5\xad\x5a\x7c\xdd\xe2\xb2\x95\x40\xf3\x3e\x46\xcb\xc0\x78\x52\x7f\x4c\xc1\x66\x7c\xe1\xc9\x03\x24\xfa\x2a\x91\xfb\x5f\x14\xfb\xef\x8f\x62\xf2\xde\x42\x1b\x19\x8a\x31\x23\xbb\x9e\xdc\x69\x91\xcd\xa8\x66\xdc\x9c\x3a\x4d\xd3\x95\x27\x71\x63\x18\x73\xf8\x77\x9d\x65\x99\x95\x2d\x2f\xa0\x72\xf4\x17\x3a\xa7\x6a\x0b\xff\x11\xfa\x9f\xe6\xfb\x32\x0e\x75\x0f\xe8\x0d\xa7\xe1\x97\x62\xa7\x36\x64\xe4\x97\x7e\x8a\x27\x51\xb8\x67\x9d\xc5\xd0\xfc\xeb\x22\xdc\xd3\x58\xc2\xd7\x4e\xa2\x08\x8f\x3b\x89\xa2\xee\x59\x4e\xe1\x0c\xde\x77\x12\x4b\xdd\x7f\x9c\xc2\x61\x9e\x78\x06\x01\xfc\xf1\x34\xc6\x59\xc1\x30\xdf\x3c\x89\xc0\x3d\xd4\xc5\x90\xf5\xb6\x33\xae\xbc\xd5\xae\xb0\xac\x8a\x67\x3a\x7b\xcc\x31\x1a\xb3\x4a\x75\x87\x76\x92\x31\xa8\x23\xce\xec\x4d\x5c\xbb\x59\x9c\xd0\x6d\x51\x2b\x07\x13\x5c\xac\x14\x88\x39\x16\xbb\x41\x09\x3c\xec\xc9\xf3\x4d\x72\xe6\x9e\x50\x7c\xad\x21\xb5\xe6\xa7\x9e\x37\xf1\xf2\xbb\x94\x76\x99\x79\xca\xad\xce\xa2\x71\xd7\xba\x08\x4b\x73\xaf\x8b\xf1\xcf\x63\x0a\x37\x3b\x8b\x26\x5c\xed\x2c\x9a\x74\xb7\xb3\x78\x83\xcb\x9d\xc5\x94\x6e\x77\x16\x8f\xb9\xde\x05\x48\xe0\x7e\xe7\xb1\x2e\x12\x1c\x73\xc3\xb3\x48\xdc\x15\xfd\x58\xc2\x1d\xfd\x30\xe5\x92\xee\xe5\xb8\x51\x3d\xbb\x97\x4b\x08\x67\x00\x90\xbf\x52\x94\xcd\xb2\xb9\xeb\xb1\x40\x38\x63\x25\xa9\x8f\x1d\x2f\x6c\x60\x67\x80\x7a\xca\x5f\x8c\xb1\x5a\xf8\xfe\xfe\xde\x0a\x1e\x70\x2e\xba\xde\xc4\xbd\x1c\xce\xc8\x17\x38\xae\xb3\xb1\x48\xe5\x83\x9b\x11\x4b\x61\xc8\x07\x26\xd7\xeb\xc7\x05\x5a\x3c\x58\x0c\xe0\xc7\xf9\x6c\x96\x5d\x16\xbd\x14\xc1\x4b\x63\xd9\x45\xf8\x7a\x64\x33\x27\xa8\x38\x37\xce\xaa\x7c\x8c\x23\x2f\x7a\x67\xfc\x91\xd7\x58\xf2\xe1\xe8\x85\x5d\x44\xb8\x7a\xae\x76\x25\x2d\x5a\xf6\x10\x51\x7f\xcc\x30\xf1\xd7\xa6\x32\x3a\x06\x2c\xd9\xd0\x71\x86\x7b\x7d\x75\x7f\x6f\xdd\xdd\xc7\xe2\xda\xde\xbe\x8c\x11\xf4\xc5\x55\xfe\x58\xc1\xa2\x51\xe2\x81\xd9\x53\xfb\xc8\xfd\xcd\xe7\xf3\x95\xfb\x20\x54\x8a\x04\x2f\xd9\x47\x2f\x65\x08\x05\x09\x41\xf5\x73\xea\xde\xc4\x44\x1a\xa9\x3c\x7c\x48\x76\x05\x32\x86\xe3\xaf\x44\x4e\x61\x9f\xc3\x73\x2a\x13\x1f\x12\xb7\xd9\x33\x38\x4e\x15\xe3\x43\x72\xab\x19\x1f\x96\xaf\xaa\xf1\xe1\xb9\xd5\x8d\x0f\xcb\xaa\x72\xfc\x28\x66\xb5\xe3\xc5\xb9\x40\x98\x56\xf5\xe3\x43\xb1\xab\xa0\x01\x87\xfb\x8d\x0f\xe0\x94\x49\x03\x64\x28\x97\x4c\x67\x50\xbe\xc7\x9f\x7f\x9d\xb8\x2a\xd0\x2a\xed\xd0\x83\x24\x9e\x32\x7b\x00\x2e\x43\x0a\xa2\x18\x1a\xaf\xf7\xfd\x4f\xa5\x6e\xcd\xd1\xd5\xad\x7c\x4c\x35\xd6\xb6\x33\xba\x70\x6f\xcd\xa0\x4d\x7b\xe1\x55\x89\x7d\x49\x62\x56\x46\x17\x5c\xb2\xd8\x7d\x62\xef\x68\x44\x1a\xc2\xd7\xb1\x83\x22\x66\xcf\x94\xec\xdb\x94\x0b\x2f\x60\x82\xe9\xd4\x0c\xb7\xe2\x2b\xd7\x67\xc4\x43\x3c\xce\x9c\xc3\xc6\x83\xd3\x5b\x8f\x95\xf4\x2b\x17\xf9\xd4\xcb\x5d\x45\x88\xc4\x0a\xf0\x43\x80\x8d\xdb\xfd\xd8\x14\xdb\xdc\x0c\xe0\x88\xa5\x1b\x6d\x56\x83\xe4\xe2\x20\x9a\x3a\x6d\x57\xbe\xa6\x11\xde\x18\x32\x3d\xc3\x92\x7b\x38\xfb\x18\x93\x27\xf2\x77\x90\x60\x86\xf7\xc9\xf4\x0c\xc9\xa2\x23\x14\x2a\x8c\xa2\xcc\xce\x13\x3e\xe2\xf2\x4e\x16\x77\x6b\x0b\x38\xb6\xd8\xbf\x78\x38\xee\xcc\x13\xf3\xe4\xfa\x49\x89\xfe\x1d\x56\xb4\x69\xe3\x5c\x5d\xc8\xcd\x3b\x38\xb0\x56\x8d\x66\xae\x9e\x41\x0c\x52\x20\x67\x97\x97\x4f\x7b\x55\xbc\x9c\xdb\xf1\xd2\x70\x9c\x69\xef\xbd\x15\x35\x70\x66\xd1\x5c\x62\xdd\xdd\x8d\x22\x4d\xa3\x99\x6a\xd6\x1c\xa7\x34\x1d\x28\xcd\xe7\x27\x90\x16\x12\x69\xb6\xfc\xe0\xb9\x76\x7d\xd7\x1d\xab\x11\xa6\xa4\x63\x89\xe6\x47\x3d\x69\xba\xbb\xbb\x1b\x89\x61\xda\xed\xec\xc3\xbd\x15\x3d\x25\x3f\x96\xf7\x6a\x24\x9d\xc9\xf2\x1a\x77\xd3\x97\x98\x52\xad\xa1\x22\x9a\xcc\xd9\xc3\xf6\x5b\x6b\x58\xf6\x30\xdc\xb2\xac\x41\xc3\x5d\x0c\x57\xdd\x1d\xe4\x8c\xb8\x63\xa3\x4d\x0b\x27\x39\xac\x44\x5a\x0c\x15\x8f\xfe\xa4\xff\x4f\x1d\xc6\x7f\x43\x35\x09\xff\xbf\x2b\xaa\x26\xfc\xb9\x6b\x20\x13\xe4\x03\x7f\xc1\xe5\x0b\x66\x7b\x66\x20\x54\x6a\x9d\xbc\x43\x94\x57\xdd\x0d\x79\x89\xf7\x2b\xfd\x47\xc4\x9b\x4a\xba\xe6\x35\xe0\x3d\x15\x03\x7e\x45\x38\x98\xb5\x05\xa9\xef\x16\x2a\x1b\x96\xbd\xc6\xa2\x15\x27\xe1\x48\xfc\x79\xfb\xb0\xc4\x38\x82\x22\xca\xd5\x0a\x22\x79\x4e\x04\x60\x6c\xc6\x61\xd2\xb4\xb8\x43\x11\x7f\xe8\x98\x44\x4d\xd4\x76\x58\x8f\x7d\x9b\xde\x23\x5d\xa9\xe5\xdd\x65\xe7\xba\xea\x3e\xf1\x2a\xcf\xa0\x2e\xc7\xdc\xe3\xdc\x56\xa7\x56\x7e\x6c\x82\xaf\x29\x04\x08\x72\xfb\x59\xf0\xf4\x34\xd2\x87\xaa\x8c\x8b\xb5\x81\xfa\x1b\xb5\x0e\x47\x84\x88\xb7\x1a\xf7\x56\xe7\x31\xf7\x8b\x58\x36\x20\xdb\x41\x9f\x4f\x2b\x28\xae\x42\xed\x77\x59\x10\xda\x3b\x47\xd0\xc1\xc6\x60\xff\x93\x3d\x96\xfc\x21\xbc\x53\x20\xc5\xf6\x22\xda\xb3\xeb\x01\x59\x96\x66\x5a\xa8\xe2\xe8\xac\x15\x16\x30\x4d\xb6\xea\x67\xcb\x2d\xbd\x1d\x26\x6e\x77\x90\x2e\x45\xce\x48\x60\x33\xe6\xbb\x13\xe3\x50\x1e\xc0\x3b\xeb\x11\xfd\xf1\x7c\x46\x6b\x28\xc2\x76\x14\x0b\x29\xf3\xa2\x4e\x08\xda\x15\x86\x5f\xf6\xdb\xa6\x2b\xbe\xb3\xae\xf5\x32\xf0\xad\xaa\x29\x8f\x37\x51\x89\x10\x2a\xfb\x7c\x74\x3a\xa2\xf3\xe2\x8b\x87\x86\x2e\x42\x7e\xab\x22\x7a\x6c\x44\xcb\x85\x6f\x82\x9d\xb8\xd8\x7b\x35\xd8\x47\x64\x98\xf7\xc5\xd2\x55\x82\x72\x7a\xec\x57\x90\xf1\x79\xc9\xe3\xb3\xf0\xe7\x1f\xbf\xcd\x96\x7f\x78\xf8\x51\x8b\xa8\xbc\xc9\xf6\xbc\x78\x2e\x58\xd5\x58\xe3\x97\x1f\x0d\x0b\x38\x12\xd5\xce\x49\x9f\xd9\x9c\x65\x84\xfb\x81\x2f\x9c\x5c\xb0\x07\xd7\xc0\xfd\x88\xb6\x77\xfa\xb1\x08\x6e\x11\x38\x41\xd3\xbd\x2b\xba\xf9\x8b\x16\x5d\x56\x24\xed\x58\xbf\x20\x6b\x24\x54\x5d\x87\x11\x04\x28\x3e\xba\x1a\x46\xf6\xaa\xef\xd8\x3b\x73\x54\x62\x27\x44\xf5\x3e\x42\xe7\x45\xef\xdf\x92\xa7\x91\x50\xdb\xa5\xd8\x93\xbe\x4b\xee\x83\xec\xb4\x1a\xc6\xb4\xf8\x37\x74\xb9\x0e\x30\xbe\x10\x73\x7e\xda\xec\xd2\xad\x59\x91\xc4\xef\xe0\x53\xeb\x47\xe5\x63\x6b\xd4\x99\x2d\x43\x57\x5e\x4b\x70\xef\xc9\xd8\xed\x99\x0a\xb8\xc7\xa4\x53\x5c\x3f\x9d\x37\xd9\x23\x65\xe9\x36\xed\xd0\x37\x3e\xe5\x89\xd7\x50\xd6\x4c\x8e\xc7\xad\x6e\xec\xea\xf6\x72\x79\xb7\xcc\xee\x16\x07\x3b\xb6\x4b\x68\x96\xb3\x8f\x37\x08\x9f\xba\xf9\xe3\x98\x56\x7f\xda\xc9\xa3\x64\xa4\x40\x34\xe8\x68\xef\x0b\xf9\xc0\x81\x1d\x7c\x44\x63\xe2\xc9\xf7\x1e\x4e\x06\x6d\x46\xc4\x66\xd4\xa8\xea\xce\x2e\x75\x3d\x9f\xb1\x8f\xe1\x89\xb2\x9f\xcb\xe6\x36\xbc\x00\x87\x77\xdb\xb3\x5e\x30\xed\x55\x08\x69\x6d\xef\x6c\x2f\x5e\xe1\xaa\xa5\x6f\x51\x8a\xcb\x92\x24\x64\xdb\xbc\xfa\x6e\x77\xd7\xec\x73\xd0\xe8\x07\xf2\x4d\x19\x6d\x7d\xf9\x9a\x00\x7f\xad\x23\x78\x58\x7e\xf8\x34\x0d\x90\x9d\xea\x0e\xd5\x36\xbf\x58\x75\x5f\x7c\xd3\x57\xa0\xca\x5a\xe4\xcf\xad\xda\x93\x38\xd3\x6d\xee\xd4\xc6\x84\x0f\x0c\x8d\x96\xda\x29\x66\xbf\xc1\xb0\xb2\x5f\x5d\x18\xbb\x9b\x50\xfc\x78\x8a\x6e\xc5\x9b\x51\x63\x6b\x7c\x2a\x76\x4c\x4a\xcc\xf4\x7d\x8f\x31\x62\xf6\xd1\xde\x6e\x71\x7a\x6c\xec\x77\x54\xf8\x9d\x88\xc5\xe5\x25\x66\xce\x71\xa3\x26\xcb\x2c\x29\x43\xdc\xec\x8a\x96\xdd\x86\x75\x49\x4d\xb7\x62\x3f\x1f\x67\x75\x34\xbd\xf1\x52\xbe\xce\x67\xec\x63\x50\x15\xbb\x67\x34\x32\xcf\x5b\x42\xa3\x16\xa5\xcd\x63\x2f\x6b\x7d\x01\x0e\x8e\xa5\xfa\x17\x9b\x96\x4f\xae\x7a\x78\xb4\xb6\xa5\x43\x06\x3b\x3a\x5a\x8a\x76\xf5\x70\x11\xab\x3a\xb9\xf7\x30\xfb\xaf\x00\x00\x00\xff\xff\x4e\x69\xc9\x07\x32\x3a\x00\x00"

func frontendStaticStyleMinCssBytes() ([]byte, error) {
	return bindataRead(
		_frontendStaticStyleMinCss,
		"frontend/static/style.min.css",
	)
}

func frontendStaticStyleMinCss() (*asset, error) {
	bytes, err := frontendStaticStyleMinCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "frontend/static/style.min.css", size: 14898, mode: os.FileMode(420), modTime: time.Unix(1456645829, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _frontendTemplatesBaseHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xc1\x6e\xd4\x30\x10\x3d\x37\x5f\x61\x7c\xc9\x01\x12\x2f\x15\x12\xa8\x72\xc2\xa1\xf4\x86\x04\x12\xbd\x70\x74\x93\x49\x32\x60\x3b\x56\x3c\xa9\xba\x44\xfb\xef\xd8\xde\x6c\x37\xea\x82\xd4\x43\x64\xaf\x67\xde\x7b\xde\x37\xcf\xcb\xd2\x42\x87\x16\x18\x27\xa7\xf9\xe1\x90\xc9\x37\x5f\xbe\xdd\xde\xff\xfc\x7e\xc7\x06\x32\xba\xce\xe4\x69\x01\xd5\xd6\xd9\x95\x34\x40\x8a\x59\x65\xa0\xe2\xcd\xa0\x26\x0f\xc4\x59\x33\x5a\x02\x4b\x15\x9f\xa9\x2b\x3e\xf1\xd8\xa6\xd1\xfe\x66\x13\xe8\x8a\x7b\xda\x6b\xf0\x03\xc4\xc6\x61\x82\xae\xe2\xc2\x93\x22\x6c\x44\xaa\x94\x06\x6d\xd9\x78\xcf\x99\x81\x16\x55\xe8\x6f\x26\x00\x7b\x26\x49\x98\x7c\x20\x72\xfe\x46\x88\x2e\x48\xf9\xb2\x1f\xc7\x5e\x83\x72\xe8\xcb\x66\x34\x22\xc0\x3f\x77\xca\xa0\xde\x57\x77\x4f\xe3\xdb\xeb\x9b\x0f\xbb\xdd\xbb\x8f\xe1\xbb\x0e\xdf\xfb\xdd\x2e\x4f\x37\xc9\xcf\x37\xc9\x19\xed\x1d\x54\x39\xc1\x13\x45\x74\x1e\xd5\x08\x49\x43\xbd\x2c\xd8\xb1\xf2\x76\xf6\x34\x9a\xfb\x78\x72\x38\x2c\xcb\xcb\xdf\xa0\x7d\x5a\x63\xeb\xb9\x69\xdd\xb1\x82\x3d\xd8\x66\x38\x75\xad\x7b\xdb\x26\x60\x5c\xa4\x38\x4a\x65\x52\x1c\x5d\x95\x0f\x63\xbb\x8f\x57\x68\xf1\x91\x35\x5a\x79\x5f\x71\x37\x4f\x50\x18\xb0\x33\x7b\xde\x15\xc3\x38\xe1\x9f\x60\x80\xd2\x49\xa1\xb0\xea\x31\xfa\x74\x25\xd5\xc9\x59\x7e\x01\x2f\xa2\x04\xda\x7e\x43\x13\x6d\xe5\x75\x64\x90\x42\x25\xfc\xac\x2f\x71\x1a\x3d\x25\xf6\x38\x87\xcb\x32\x12\x18\x5e\x9f\x95\xf5\xd8\xa3\xfd\x87\xfc\x51\xec\x6b\xac\x46\x35\x29\x34\xbe\x9e\xd4\x63\x6f\x67\xf7\x5f\xd6\x1f\xa1\xcc\x66\xb7\xe5\x95\x62\xd6\xd1\x49\x11\xac\xac\xb3\x17\x96\xaa\x1e\x8a\x35\xab\xe9\x9f\x2d\x4b\xd0\x73\x5a\x51\x88\xff\xe9\x9c\x95\xe1\x11\x6c\xf0\x21\x8e\xe8\x88\xf9\xa9\xd9\x04\x37\x9d\xa5\xe4\xfe\x0a\xc1\x5d\xdf\xc1\x73\xfc\xe5\xda\x10\x07\x7c\x9c\x6c\x18\x74\x7a\x45\x6b\x00\xb2\xbf\x01\x00\x00\xff\xff\x1e\x73\x1e\x70\x76\x03\x00\x00"

func frontendTemplatesBaseHtmlBytes() ([]byte, error) {
	return bindataRead(
		_frontendTemplatesBaseHtml,
		"frontend/templates/base.html",
	)
}

func frontendTemplatesBaseHtml() (*asset, error) {
	bytes, err := frontendTemplatesBaseHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "frontend/templates/base.html", size: 886, mode: os.FileMode(420), modTime: time.Unix(1456247605, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _frontendTemplatesIndexPublicHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x90\xc1\x6e\x83\x30\x0c\x86\xcf\xf0\x14\x16\x77\x5a\xa1\x5e\x19\xd7\x69\x4f\xb0\xb3\x89\x0d\x89\x1a\xec\x89\x84\x49\x15\xea\xbb\xcf\xa4\x45\xda\x25\x89\xf2\x7f\x5f\x62\x7b\xdf\x89\xa7\x20\x0c\x8d\x53\xc9\x2c\xb9\x79\x3e\xeb\x9e\xc2\x2f\xb8\x88\x29\x7d\x94\x6b\x34\x60\x6d\x86\xba\xfa\x1f\x60\x0c\xb3\xb4\xce\x94\x57\x56\xf5\xbe\x3b\x33\x59\xc6\x66\xf8\xe6\xe8\x74\x61\xc8\x0a\xa3\x38\x7f\xe9\xaf\xbe\x7b\x71\xb7\x93\xf3\x5d\x4b\x9c\x5c\xd1\xab\x4f\x25\x20\x5c\x04\xbe\x20\x6d\xee\x0e\x98\x61\xc1\x7b\x90\x19\xa6\xd5\x8a\x80\x1f\x9c\x39\x5d\x0e\xb2\x1f\xd7\xb7\xa1\xd4\x46\xd5\x02\xa1\x10\x4c\x28\xee\x01\x51\x67\x35\xf5\x01\xe5\xfb\x64\x4b\x0e\x76\x08\x02\xd9\x33\x4c\x5b\xde\x56\x3e\xde\xb1\x82\x6e\x47\x53\x57\xeb\x6a\xa8\xdf\xdb\xbe\xb3\x90\xcd\xe0\x2f\x00\x00\xff\xff\x17\x0d\x15\x77\x19\x01\x00\x00"

func frontendTemplatesIndexPublicHtmlBytes() ([]byte, error) {
	return bindataRead(
		_frontendTemplatesIndexPublicHtml,
		"frontend/templates/index-public.html",
	)
}

func frontendTemplatesIndexPublicHtml() (*asset, error) {
	bytes, err := frontendTemplatesIndexPublicHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "frontend/templates/index-public.html", size: 281, mode: os.FileMode(420), modTime: time.Unix(1456247658, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _frontendTemplatesPageStatusHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x2a\x2e\x49\x2c\x29\x2d\xd6\x2d\x2e\x4d\x4e\x4e\x2d\x2e\x56\xaa\xad\xe5\xb2\x49\xc9\x2c\x53\x48\xce\x49\x2c\x2e\xb6\x55\x2a\x48\x4c\x4f\xd5\x85\x28\x51\x40\x62\xeb\xc2\xd5\xdb\x71\x55\x57\xeb\x81\x34\xe9\x03\x75\x81\x38\xa9\x79\x29\x40\x2e\x86\xf9\x69\x89\x99\x39\x44\x1b\x0e\x52\x5c\x5a\x94\x8a\xcb\x70\x40\x00\x00\x00\xff\xff\x1a\xeb\xe1\x6a\xbd\x00\x00\x00"

func frontendTemplatesPageStatusHtmlBytes() ([]byte, error) {
	return bindataRead(
		_frontendTemplatesPageStatusHtml,
		"frontend/templates/page-status.html",
	)
}

func frontendTemplatesPageStatusHtml() (*asset, error) {
	bytes, err := frontendTemplatesPageStatusHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "frontend/templates/page-status.html", size: 189, mode: os.FileMode(420), modTime: time.Unix(1456236641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _frontendTemplatesSignupHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x94\xcb\x6e\xdb\x3a\x10\x86\xd7\xf6\x53\xf0\x70\x7d\x64\xc1\xf2\x56\x16\xba\x68\xbb\x28\x50\x20\x80\xdb\x07\xa0\xc9\x91\xc5\x86\x17\x81\x97\xb4\x81\xe0\x77\xef\x50\xa2\x6c\x25\xb0\x1b\xb4\xc8\xca\x1c\xfe\x3f\x67\xf8\x8d\xc5\x19\x06\x01\xad\x34\x40\x28\xb7\x26\x80\x09\xf4\x7c\x5e\xd7\x42\x3e\x11\xae\x98\xf7\xfb\x71\x9b\xa1\xc1\x11\xa6\xe4\xc9\x14\x1c\x3d\xe0\x68\xb3\x5e\x0d\x83\x6c\xc9\xe6\x10\x58\x88\x7e\xf3\x99\x49\x15\x1d\xe0\xe1\x15\x0a\x01\x74\xaf\x58\xc0\xac\x7e\x94\x8b\x16\x65\x7a\xcb\x3c\x0c\x60\xc4\xb4\x58\x64\x3b\x44\xce\xc1\xfb\x7b\xd9\xfc\x24\xd3\x5b\xfe\x4b\xc2\xba\xdb\xce\x0c\x46\x1f\x69\x73\xc0\xdb\x93\xd8\xd7\x65\xb7\x6d\x92\xba\x9b\xd5\x6e\x5b\x08\xf0\x9c\x36\x5f\xac\x34\x24\x74\x40\xb8\x74\x5c\xc1\x0f\x70\x8f\xe8\xde\x25\x77\x6b\x9d\x9e\xfd\x3d\x5e\xbd\x18\x37\x2e\xab\x62\xec\x0d\x08\x4a\x18\x0f\xd2\x9a\x3d\x2d\x3d\x6e\xc4\x9e\x12\x0d\xa1\xb3\x02\x4f\x59\x1f\x52\xd7\x30\x97\x04\x25\x3c\x84\x14\xac\x96\xad\x1e\xd3\xa5\x7e\x3b\xab\x8a\x93\xb3\x78\x7c\xf4\xac\x6a\xc5\x8e\xa0\x08\x56\xda\xd3\xe8\xc1\x19\xa6\x81\x36\xdf\xf3\xaa\x2e\x47\x39\x5b\xa5\xe9\x63\x20\x52\x2c\x9c\x24\x3c\xf7\xb0\xa7\x01\x7e\x05\x4a\xd2\xce\x52\xc3\xce\x72\xe8\xac\x12\x80\xc9\xbf\xca\x47\xa0\xd3\x3f\xf1\x80\xf7\xfd\xc8\x02\xdb\xcc\x65\xce\x67\xf2\xc4\x54\xc4\xc3\xc3\x70\x4b\xa5\xb9\xf3\x13\x56\x89\x5c\xcd\xfa\x9f\x08\x7b\xb4\xfe\xb4\x4e\xd0\xe6\x21\xaf\xee\x11\x5e\x9c\x99\xf0\x1a\x4f\x94\xd7\xf8\x05\x65\x6b\xed\x91\xb9\x6d\xb5\x7b\x8d\x3a\xd7\xbb\x8d\x7a\x55\xdf\x1d\xb5\xa2\xcd\xb7\x8e\x05\x32\xc7\xff\x13\x76\xc2\x47\xf7\x16\x77\xf5\x16\x78\xf5\xb7\xe4\xd5\x9f\xd1\xab\x77\x64\x07\x9d\x66\x42\xf3\x29\xfd\x10\x26\x84\xc3\x07\x7c\x0f\x78\xf2\x66\xd8\x1c\x4c\xa4\x39\x78\x41\xa9\xf1\x2b\xfe\x70\x4a\xc2\x86\x5b\xfd\x1a\x75\x2c\x78\x1b\x33\x4b\x77\x10\xeb\x72\xf9\x72\xeb\x63\x0c\xc1\x9a\x7c\x27\x1f\x8f\x5a\xe2\xeb\x5a\x36\x20\x1b\x16\xeb\xa2\x77\x52\x33\xf7\x8c\xc3\xc8\x46\x23\x3c\x69\xa3\xf9\xaf\x2e\x27\x31\x8d\x99\x32\x0d\x93\x66\x9d\x6b\xce\xa3\xec\x77\x00\x00\x00\xff\xff\xd1\xfc\x04\xc3\xa4\x05\x00\x00"

func frontendTemplatesSignupHtmlBytes() ([]byte, error) {
	return bindataRead(
		_frontendTemplatesSignupHtml,
		"frontend/templates/signup.html",
	)
}

func frontendTemplatesSignupHtml() (*asset, error) {
	bytes, err := frontendTemplatesSignupHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "frontend/templates/signup.html", size: 1444, mode: os.FileMode(420), modTime: time.Unix(1456238134, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"frontend/static/script.js":            frontendStaticScriptJs,
	"frontend/static/script.min.js":        frontendStaticScriptMinJs,
	"frontend/static/style.min.css":        frontendStaticStyleMinCss,
	"frontend/templates/base.html":         frontendTemplatesBaseHtml,
	"frontend/templates/index-public.html": frontendTemplatesIndexPublicHtml,
	"frontend/templates/page-status.html":  frontendTemplatesPageStatusHtml,
	"frontend/templates/signup.html":       frontendTemplatesSignupHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"frontend": &bintree{nil, map[string]*bintree{
		"static": &bintree{nil, map[string]*bintree{
			"script.js":     &bintree{frontendStaticScriptJs, map[string]*bintree{}},
			"script.min.js": &bintree{frontendStaticScriptMinJs, map[string]*bintree{}},
			"style.min.css": &bintree{frontendStaticStyleMinCss, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"base.html":         &bintree{frontendTemplatesBaseHtml, map[string]*bintree{}},
			"index-public.html": &bintree{frontendTemplatesIndexPublicHtml, map[string]*bintree{}},
			"page-status.html":  &bintree{frontendTemplatesPageStatusHtml, map[string]*bintree{}},
			"signup.html":       &bintree{frontendTemplatesSignupHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
